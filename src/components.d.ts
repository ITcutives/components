/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface MyComponent {
      'first': string;
      'last': string;
    }
  }

  interface HTMLMyComponentElement extends StencilComponents.MyComponent, HTMLStencilElement {}

  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement;
  }
  interface ElementTagNameMap {
    'my-component': HTMLMyComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-component': JSXElements.MyComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface MyComponentAttributes extends HTMLAttributes {
      'first'?: string;
      'last'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface PcFab {

    }
  }

  interface HTMLPcFabElement extends StencilComponents.PcFab, HTMLStencilElement {}

  var HTMLPcFabElement: {
    prototype: HTMLPcFabElement;
    new (): HTMLPcFabElement;
  };
  interface HTMLElementTagNameMap {
    'pc-fab': HTMLPcFabElement;
  }
  interface ElementTagNameMap {
    'pc-fab': HTMLPcFabElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'pc-fab': JSXElements.PcFabAttributes;
    }
  }
  namespace JSXElements {
    export interface PcFabAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PcHeader {

    }
  }

  interface HTMLPcHeaderElement extends StencilComponents.PcHeader, HTMLStencilElement {}

  var HTMLPcHeaderElement: {
    prototype: HTMLPcHeaderElement;
    new (): HTMLPcHeaderElement;
  };
  interface HTMLElementTagNameMap {
    'pc-header': HTMLPcHeaderElement;
  }
  interface ElementTagNameMap {
    'pc-header': HTMLPcHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'pc-header': JSXElements.PcHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface PcHeaderAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;